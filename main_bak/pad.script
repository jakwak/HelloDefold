function init(self)
  -- 패드 초기화
  self.target_position = go.get_position()
  self.visible = true
  
  -- 패드의 초기 위치
  self.initial_position = go.get_position()
  self.direction = 1  -- 1: 오른쪽, -1: 왼쪽
  self.speed = 100    -- 초당 100픽셀 속도
  self.max_distance = 100  -- 중앙에서 좌우로 각각 100픽셀(총 200픽셀) 이동
  
  -- 디버그용 프린트
  print("Pad position: " .. self.initial_position.x .. ", " .. self.initial_position.y)
  
  -- 서버 동기화를 위한 타이머
  self.sync_timer = 0
  self.sync_interval = 2  -- 2초마다 위치 정보 출력
end

function update(self, dt)
  -- 서버에서 받은 위치로만 이동 (보간도 가능)
  if self.target_position then
    local current_position = go.get_position()
    -- 부드럽게 이동하고 싶으면 아래처럼 보간
    local lerp_speed = 0.2
    local new_pos = vmath.vector3(
      current_position.x + (self.target_position.x - current_position.x) * lerp_speed,
      current_position.y + (self.target_position.y - current_position.y) * lerp_speed,
      current_position.z
    )
    go.set_position(new_pos)
  end
  
  -- 서버 동기화 타이머 업데이트
  self.sync_timer = self.sync_timer + dt
  if self.sync_timer >= self.sync_interval then
    self.sync_timer = 0
    -- local pos = go.get_position()
    -- print("Pad position for server sync: x=" .. pos.x .. ", y=" .. pos.y)
    -- 서버 동기화 코드를 여기에 추가할 수 있음
  end
end

function on_message(self, message_id, message, sender)
  if message_id == hash("update_pad_position") then
    self.target_position = vmath.vector3(message.x, message.y, 0)
  end
end