-- 움직임 관련 로직
go.property("lerp_speed", 0.2) -- 보간 속도 조절용 프로퍼티
go.property("start_x", 480) -- 가운데 위에서 시작하기 위한 X 좌표
go.property("start_y", 350) -- 가운데에서 시작하기 위한 Y 좌표

function init(self)
    -- 바로 플레이어를 보이게 처리
    msg.post("#sprite", "enable")
    msg.post("#label", "enable")
    
    -- 초기 위치 설정 (바로 시작 위치에 표시)
    self.initial_pos = vmath.vector3(self.start_x, self.start_y, 0)
    self.target_pos = self.initial_pos
    self.received_first_position = false
    self.visible = true
    
    -- 물리 바디 활성화
    msg.post("#collisionobject", "enable")
    
    -- 초기 시작 위치에 즉시 배치
    go.set_position(self.initial_pos)
    
    -- 속도 초기화
    msg.post("#collisionobject", "set_linear_velocity", {
        linear_velocity = vmath.vector3(0, 0, 0)
    })
    
    -- 플레이어 준비 완료 알림
    timer.delay(0.1, false, function()
        msg.post("#player2_network", "position_ready", {
            x = self.start_x,
            y = self.start_y
        })
    end)
end

function update(self, dt)
    -- 현재 위치와 목표 위치 사이를 부드럽게 보간
    if self.target_pos then
        local current_pos = go.get_position()
        local new_pos = vmath.vector3(
            current_pos.x + (self.target_pos.x - current_pos.x) * self.lerp_speed,
            current_pos.y + (self.target_pos.y - current_pos.y) * self.lerp_speed,
            current_pos.z
        )
        go.set_position(new_pos)
    end
end

function on_message(self, message_id, message, sender)
    if message_id == hash("show_player") then
        -- player2.script에서 바로 플레이어 표시 요청
        print("Player2 showing immediately at position:", message.x, message.y)
        go.set_position(vmath.vector3(message.x, message.y, 0))
        self.target_pos = vmath.vector3(message.x, message.y, 0)
        
        -- 이미 표시되어 있지만 확실히 하기 위해
        msg.post("#sprite", "enable")
        msg.post("#label", "enable")
        self.visible = true
        
        -- 물리 활성화
        msg.post("#collisionobject", "enable")
        
    elseif message_id == hash("update_position") then
        -- 위치 업데이트 (isControllable 제거)
        self.target_pos = vmath.vector3(message.x, message.y, 0)
        
        if not self.received_first_position then
            self.received_first_position = true
            -- 서버에서 첫 위치를 받으면 즉시 이동
            go.set_position(vmath.vector3(message.x, message.y, 0))
        end
        
    elseif message_id == hash("reset_velocity") then
        -- 물리 속도 초기화
        msg.post("#collisionobject", "set_linear_velocity", {
            linear_velocity = vmath.vector3(0, 0, 0)
        })
    end
end 