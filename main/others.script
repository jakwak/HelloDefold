local utils = require "main.utils"

function init(self)
  -- 필요한 초기화
  self.x = 0
  self.y = 0
  self.username = ""
  self.size = 0
  self.color = ""

  -- 방향 관련 변수 초기화
  self.current_angle = math.pi / 2         -- 90도(라디안)로 초기화
  self.target_dir = vmath.vector3(0, 1, 0) -- 초기 방향

  self.sprite_id = factory.create("#airplane_factory", vmath.vector3(0, 0, 0))
  go.set_parent(self.sprite_id, go.get_id(), false) -- false = 상대좌표 유지
  go.set_rotation(vmath.quat_rotation_z(self.current_angle), self.sprite_id)

  -- msg.post(self.sprite_id, "airplane_type", { type = "others" })

  msg.post(msg.url("#sprite"), "disable")


  -- 크기 애니메이션 설정
  go.set_scale(0.1, self.sprite_id) -- 초기 크기를 0.1로 설정
  go.animate(self.sprite_id, "scale", go.PLAYBACK_ONCE_FORWARD, 1, go.EASING_LINEAR, 1)
end

function update(self, dt)
  -- 부드러운 회전 처리
  if self.target_dir then
    -- 목표 각도 계산
    local target_angle = math.atan2(self.target_dir.y, self.target_dir.x) - math.pi / 2

    -- 각도 보간 함수
    local function angle_lerp(a, b, t)
      local diff = (b - a + math.pi) % (2 * math.pi) - math.pi
      return a + diff * t
    end

    -- 현재 각도를 목표 각도로 부드럽게 보간
    self.current_angle = angle_lerp(self.current_angle, target_angle, 0.15)
    go.set_rotation(vmath.quat_rotation_z(self.current_angle), self.sprite_id)
  end
end

function on_message(self, message_id, message, sender)
  if message_id == hash("set_player_info") then
    if message.username then
      self.username = message.username
      label.set_text("#label", tostring(self.username))
    end
    if message.size then
      self.size = message.size
      go.set("#sprite", "scale", vmath.vector3(self.size / 32 * 4, self.size / 32 * 4, 1))
    end
    if message.color then
      self.color = message.color
      go.set("#sprite", "tint", utils.hex_to_v4(tostring(self.color)))
    end
    if message.x then
      self.x = message.x
      go.set_position(vmath.vector3(self.x, self.y, 0))
    end
    if message.y then
      self.y = message.y
      go.set_position(vmath.vector3(self.x, self.y, 0))
    end
    if message.dirx or message.diry then
      -- 방향 벡터 업데이트
      if message.dirx then self.target_dir.x = message.dirx end
      if message.diry then self.target_dir.y = message.diry end
    end
    if message.type then
      msg.post(self.sprite_id, "airplane_type", { type = message.type })
    end
  end
end
