local Colyseus = require "colyseus.sdk"
local utils    = require "main.utils"

local room     = nil

function init(self)
	-- 스크립트 상단에 테이블 선언
	self.spawned_objects = {}

	local my_id = msg.url()
	msg.post("main:/managers#global_network", "register_listener", { id = my_id })

	self.player_factory_url = msg.url(nil, go.get_id(), "player_factory")
	self.others_factory_url = msg.url(nil, go.get_id(), "others_factory")
	self.npc_factory_url = msg.url(nil, go.get_id(), "npc_factory")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("network_connected") and room == nil then
		room = _G.network_room

		local callbacks = Colyseus.callbacks(room)

		callbacks:on_add("players", function(player, session_id)
			if session_id == room.session_id then
				local obj = factory.create(self.player_factory_url, vmath.vector3(player.x, player.y, 0))
				self.spawned_objects[session_id] = obj
				msg.post(obj, "set_player_info", { username = player.username, size = player.size, color = player.color })
			else
				local obj = factory.create(self.others_factory_url, vmath.vector3(player.x, player.y, 0))
				self.spawned_objects[session_id] = obj
				msg.post(obj, "set_player_info", { username = player.username, size = player.size, color = player.color })
				callbacks:listen(player, "x", function(cur_val, prev_val)
					msg.post(obj, "set_player_info", { x = cur_val })
				end)
				callbacks:listen(player, "y", function(cur_val, prev_val)
					msg.post(obj, "set_player_info", { y = cur_val })
				end)
			end
		end)

		callbacks:on_add("npcs", function(npc, _)
			local obj = factory.create(self.npc_factory_url, vmath.vector3(npc.x, npc.y, 0))
			self.spawned_objects[npc.id] = obj
			msg.post(obj, "set_npc_info", { id = npc.id, size = npc.size, color = npc.color })
			callbacks:listen(npc, "x", function(cur_val, prev_val)
				msg.post(obj, "set_npc_info", { x = cur_val })
			end)
			callbacks:listen(npc, "y", function(cur_val, prev_val)
				msg.post(obj, "set_npc_info", { y = cur_val })
			end)
		end)

		callbacks:on_remove("players", function(_, session_id)
			local obj = self.spawned_objects[session_id]
			if obj then
					go.delete(obj)
					self.spawned_objects[session_id] = nil
			end
		end)
		callbacks:on_remove("npcs", function(npc, _)
			local obj = self.spawned_objects[npc.id]
			if obj then
					go.delete(obj)
					self.spawned_objects[npc.id] = nil
			end
		end)
	end
end
