function init(self)
	for i = 1, 8 do
		msg.post(msg.url("#airplane" .. i .. "_sprite"), "disable")
	end
	-- 폭발 효과 객체들을 추적하기 위한 테이블
	self.explosion_objects = {}
end

-- 모든 폭발 효과 객체 삭제 함수
local function clear_all_explosions(self)
	if self.explosion_objects then
		for i, explosion_id in ipairs(self.explosion_objects) do
			if go.exists(explosion_id) then
				go.delete(explosion_id)
			end
		end
		self.explosion_objects = {}
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("airplane_type") then
		for i = 1, 8 do
			msg.post(msg.url("#airplane" .. i .. "_sprite"), "disable")
		end
		if message.type == "model1" then
			msg.post(msg.url("#airplane1_sprite"), "enable")
		end
		if message.type == "model2" then
			msg.post(msg.url("#airplane4_sprite"), "enable")
		end
		if message.type == "model3" then
			msg.post(msg.url("#airplane3_sprite"), "enable")
		end
		if message.type == "model4" then
			msg.post(msg.url("#airplane6_sprite"), "enable")
		end
		if message.type == "leader" then
			msg.post(msg.url("#airplane2_sprite"), "enable")
			go.set_scale(0.8, msg.url("#airplane2_sprite"))
		end
		if message.type == "follower" then
			msg.post(msg.url("#airplane5_sprite"), "enable")
			go.set_scale(0.8, msg.url("#airplane3_sprite"))
		end
	end
	if message_id == hash("explode") then
		local explode = factory.create("#explosion_factory", vmath.vector3(math.random(-15, 15), math.random(-15, 15), 0))
		go.set_parent(explode, go.get_id(), false)
		msg.post(explode, "play")
		-- 생성된 폭발 효과 객체를 추적 목록에 추가
		table.insert(self.explosion_objects, explode)
	end
	if message_id == hash("explode_npc") then
		local explode = factory.create("#explosion_factory", vmath.vector3(0, 0, 0))
		go.set_parent(explode, go.get_id(), false)
		msg.post(explode, "explode_npc")
		-- 생성된 폭발 효과 객체를 추적 목록에 추가
		table.insert(self.explosion_objects, explode)
	end
	if message_id == hash("explode_reset") then
		-- 모든 폭발 효과 객체 삭제
		clear_all_explosions(self)
	end
	if message_id == hash("explode_minus") then
		-- explosion_objects 에서 1개 삭제
		local explode_id = table.remove(self.explosion_objects, 1)
		if explode_id then
			go.delete(explode_id)
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
